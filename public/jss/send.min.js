const dbName="FileDatabase",osName="files",chunkSize=1048576;let dbh,wss,fileinfo;const greeting="I am Alice!";let masterKey,state={sent_offset:0,confirmed_offset:0,offset_lists:[]};function getDocumentId(){return document.getElementById("uuid").textContent}function send_greeting(){const e=getDocumentId();wss.send(`${greeting}|${e}`)}function sendChunk(e){if(progress_cancelled)return sendEOF(!1),document.getElementById("upload_cancelled").style.display="block",document.getElementById("fileInfo").style.display="none",void(document.getElementById("receive_url_table").style.display="none");if(void 0===e)return void sendEOF();const t=dbh.transaction([osName],"readonly");t.onerror=function(e){errorMessageBox("Error","The read transaction error while sending the file!")};const n=t.objectStore(osName).get(e);n.onerror=function(e){errorMessageBox("Error","Error reading the file chunk from the local database!")},n.onsuccess=function(t){if(!n.result)return void sendEOF();const s=(new TextEncoder).encode(getDocumentId()),o=(new TextEncoder).encode("|data|"),r=new ArrayBuffer(4);new DataView(r).setUint32(0,e,!0);const i=new Uint8Array(n.result.data),l=new Uint8Array(s.length+o.length+r.byteLength+i.byteLength);l.set(s,0),l.set(o,s.length),l.set(new Uint8Array(r),s.length+o.length),l.set(i,s.length+o.length+4),wss.send(l),state.sent_offset=e,setBarWidth((e+i.byteLength)/fileinfo.size*100),setProgressDetails(e+i.byteLength,fileinfo.size)}}function sendEOF(e=!0){e?(wss.send(`${fileinfo.uuid}|EOF|`),setBarWidth(100),setProgressDetails(fileinfo.size,fileinfo.size),hideProgressBar()):(wss.send(`${fileinfo.uuid}|CANCEL|`),hideProgressBar())}function sendFile(){setBarWidth(0),setProgressDetails(0,fileinfo.size),showProgressBar(),setProgressTitle("Sending file..."),sendChunk(state.offset_lists.shift())}function onMessage(e,t){try{const e=JSON.parse(t);if(void 0!==e.result)switch(e.result){case"bob is ready":return void(e.id===getDocumentId()&&sendFile());case"OK":default:return;case"ERROR":return void errorMessageBox("Error",e.error);case"CANCEL":return hideProgressBar(),errorMessageBox("Error","The file upload was cancelled by the recipient."),document.getElementById("upload_cancelled").style.display="block",document.getElementById("fileInfo").style.display="none",void(document.getElementById("receive_url_table").style.display="none");case"RCVD":return state.confirmed_offset=e.offset,void(state.sent_offset===state.confirmed_offset&&sendChunk(state.offset_lists.shift()))}}catch(e){return}}function pingServer(){wss.send(`${fileinfo.uuid}|PING|`)}function open_ws(){wss&&(wss.onerror=ws.onopen=ws.onclose=null,wss.close());const e="https:"===location.protocol?"wss":"ws";return wss=new WebSocket(`${e}://${location.host}`),wss.onerror=function(){errorMessageBox("Error","WebSocket error")},wss.onopen=function(){send_greeting(),setInterval(pingServer,1e4)},wss.onclose=function(){wss=null},wss.onmessage=function(e){onMessage(wss,e.data)},wss}function delete_db(){indexedDB.deleteDatabase(dbName)}function open_db(){return dbh=indexedDB.open(dbName,1),dbh.onerror=function(e){errorMessageBox("Error","Error opening the local database. Please, reload the page to try again.")},dbh.onsuccess=function(e){dbh=e.target.result},dbh.onupgradeneeded=function(e){e.target.result.createObjectStore(osName,{keyPath:"id"})},dbh}function saveChunk(e,t){const n=new FileReader,s=e.slice(t,t+chunkSize);n.onload=function(n){const s=themis.encryptData(masterKey,new Uint8Array(n.target.result)),o=dbh.transaction([osName],"readwrite");o.onerror=function(e){errorMessageBox("Error","The transaction error while saving the file!")};const r=o.objectStore(osName).add({id:t,data:s});r.onerror=function(e){errorMessageBox("Error","Error saving the file chunk to the local database!")},r.onsuccess=function(n){if(progress_cancelled)return hideProgressBar(),document.getElementById("encryption_cancelled").style.display="block",void(document.getElementById("fileInfo").style.display="none");if(state.offset_lists.push(t),t+=chunkSize,setBarWidth(t/fileinfo.size*100),setProgressDetails(t,fileinfo.size),t<e.size)saveChunk(e,t);else{let e=document.getElementById("receive_url").textContent.trim();e=e+"/"+document.getElementById("masterKey").textContent,document.getElementById("receive_url").textContent=e,document.getElementById("receive_url").style.display="block",hideProgressBar(),document.getElementById("encryption_key_table").style.display="none",document.getElementById("receive_url_table").style.display="block"}},o.commit()},n.readAsArrayBuffer(s)}function showFileInfo(){document.getElementById("fileInfo").style.display="block",document.getElementById("fileName").textContent=fileinfo.name,document.getElementById("fileSize").textContent=fileinfo.size}function sendFileInfo(){try{wss.send(`${fileinfo.uuid}|fileinfo|${JSON.stringify(fileinfo)}`)}catch(e){alert("Error sending file information to the recipient. The page will be reloaded. ")}}function uploadFile(e){const t=document.getElementById("fileInput");if(!t.files.length)return void alert("Please select a file to upload.");const n=t.files[0];if(n.size>4294967296)return void alert("Файл занадто великий для завантаження.");if(n.size<8)return void alert("Файл занадто малий для завантаження.");fileinfo={uuid:e,name:n.name,size:n.size},showFileInfo(),sendFileInfo();showProgressBar(),saveChunk(n,0),document.getElementById("fileInput").style.display="none",document.getElementById("upload_button").style.display="none"}function copyToClipboard(e){const t=document.getElementById(e).textContent;navigator.clipboard.writeText(t).then((()=>{alert("Copied to clipboard: "+t)})).catch((e=>{}))}document.addEventListener("DOMContentLoaded",(function(){delete_db(),dbh=open_db(),wss=open_ws(),setBarWidth(0),setProgressDetails(0,0),hideProgressBar(),themis.init().then((()=>{masterKey=themis.masterKey(),document.getElementById("masterKey").textContent=themis.uint8ArrayToHex(masterKey)}))}));